import re

def password_strength(password):
    score = 0

    if len(password) >= 8:
        score += 1
    if len(password) >= 12:
        score += 1  # Bonus point for a password that's longer than 12 characters

    if re.search(r'[a-z]', password):
        score += 1
    if re.search(r'[A-Z]', password):
        score += 1
    if re.search(r'\d', password):
        score += 1
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1

    return score

def password_feedback(score):
    if score <= 1:
        return "Very Weak"
    elif score == 2:
        return "Weak"
    elif score == 3:
        return "Moderate"
    elif score == 4:
        return "Strong"
    elif score >= 5:
        return "Very Strong"

def check_password(password):
    print(f"Password length: {len(password)} characters")

    if len(password) < 8:
        print("Password should be at least 8 characters long.")
    else:
        print("Length requirement met.")

    if not re.search(r'[a-z]', password):
        print("Password should contain at least one lowercase letter.")
    else:
        print("Lowercase letter requirement met.")

    if not re.search(r'[A-Z]', password):
        print("Password should contain at least one uppercase letter.")
    else:
        print("Uppercase letter requirement met.")

    if not re.search(r'\d', password):
        print("Password should contain at least one digit.")
    else:
        print("Digit requirement met.")

    if not re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        print("Password should contain at least one special character.")
    else:
        print("Special character requirement met.")

password = input("Enter your password: ")

strength_score = password_strength(password)
strength_feedback = password_feedback(strength_score)

print(f"\nYour password strength: {strength_feedback}\n")
check_password(password)
